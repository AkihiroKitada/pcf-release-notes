---
title: Pivotal Elastic Runtime v1.12 Release Notes
owner: Release Engineering
---

Pivotal Cloud Foundry is certified by the Cloud Foundry Foundation for 2017.

Read more about the [certified provider
program](https://www.cloudfoundry.org/provider-faq/) and the [requirements of
providers](https://www.cloudfoundry.org/provider-requirements/).

<hr>

## <a id='releases'></a> Releases

### <a id='1.12.0-alpha.3'></a> 1.12.0-alpha.3

* Changes the stemcell to v3421.9.
* Resolves an issue with UAA SAML Service Provider Key Password quoting.
* Replaces cf-release HAProxy job with the OSS HAProxy release.

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3421.9</td>
  </tr><tr>
    <td>binary-offline-buildpack</td><td>1.0.13</td>
  </tr><tr>
    <td>capi</td><td>1.35.0</td>
  </tr><tr>
    <td>cf-autoscaling</td><td>94</td>
  </tr><tr>
    <td>cf-backup-and-restore</td><td>0.0.9</td>
  </tr><tr>
    <td>cf-mysql</td><td>36</td>
  </tr><tr>
    <td>cf-networking</td><td>1.2.0</td>
  </tr><tr>
    <td>cf-smoke-tests</td><td>36</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.138.0</td>
  </tr><tr>
    <td>consul</td><td>171</td>
  </tr><tr>
    <td>diego</td><td>1.22.0</td>
  </tr><tr>
    <td>dotnet-core-offline-buildpack</td><td>1.0.22</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.0</td>
  </tr><tr>
    <td>go-offline-buildpack</td><td>1.8.5</td>
  </tr><tr>
    <td>haproxy</td><td>8.3.0</td>
  </tr><tr>
    <td>java-offline-buildpack</td><td>3.18</td>
  </tr><tr>
    <td>loggregator</td><td>91</td>
  </tr><tr>
    <td>mysql-backup</td><td>1.35.0</td>
  </tr><tr>
    <td>mysql-monitoring</td><td>8.5.0</td>
  </tr><tr>
    <td>nats</td><td>22</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.6</td>
  </tr><tr>
    <td>nodejs-offline-buildpack</td><td>1.6.3</td>
  </tr><tr>
    <td>notifications</td><td>36</td>
  </tr><tr>
    <td>notifications-ui</td><td>28</td>
  </tr><tr>
    <td>php-offline-buildpack</td><td>4.3.38</td>
  </tr><tr>
    <td>pivotal-account</td><td>1.6.0</td>
  </tr><tr>
    <td>push-apps-manager-release</td><td>662.0.3</td>
  </tr><tr>
    <td>python-offline-buildpack</td><td>1.5.20</td>
  </tr><tr>
    <td>routing</td><td>0.159.0</td>
  </tr><tr>
    <td>ruby-offline-buildpack</td><td>1.6.44</td>
  </tr><tr>
    <td>scalablesyslog</td><td>8</td>
  </tr><tr>
    <td>service-backup</td><td>18.1.2</td>
  </tr><tr>
    <td>staticfile-offline-buildpack</td><td>1.4.11</td>
  </tr><tr>
    <td>statsd-injector</td><td>1.0.28</td>
  </tr><tr>
    <td>syslog-migration</td><td>7</td>
  </tr><tr>
    <td>uaa</td><td>41</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.0-alpha.2'></a> 1.12.0-alpha.2

* Makes the `cf-mysql` cluster identifier consistent with the rest of the ERT metrics namespace. It is now set to `cf`.
* Sets the default max-in-flight value for the Diego Cells to 4%.
* Enables `cf_mysql.mysql.innodb_strict_mode` for the Internal MySQL database.
* Adds Diego configuration for declarative healthchecks. Still missing
  integrated CC-bridge that will enable this (coming in a future alpha).

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3421.11</td>
  </tr><tr>
    <td>binary-offline-buildpack</td><td>1.0.13</td>
  </tr><tr>
    <td>capi</td><td>1.33.0</td>
  </tr><tr>
    <td>cf</td><td>267</td>
  </tr><tr>
    <td>cf-autoscaling</td><td>94</td>
  </tr><tr>
    <td>cf-backup-and-restore</td><td>0.0.9</td>
  </tr><tr>
    <td>cf-mysql</td><td>36</td>
  </tr><tr>
    <td>cf-networking</td><td>1.2.0</td>
  </tr><tr>
    <td>cf-smoke-tests</td><td>36</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.137.0</td>
  </tr><tr>
    <td>consul</td><td>171</td>
  </tr><tr>
    <td>diego</td><td>1.22.0</td>
  </tr><tr>
    <td>dotnet-core-offline-buildpack</td><td>1.0.21</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.0</td>
  </tr><tr>
    <td>go-offline-buildpack</td><td>1.8.5</td>
  </tr><tr>
    <td>java-offline-buildpack</td><td>3.18</td>
  </tr><tr>
    <td>loggregator</td><td>91</td>
  </tr><tr>
    <td>mysql-backup</td><td>1.35.0</td>
  </tr><tr>
    <td>mysql-monitoring</td><td>8.4.0</td>
  </tr><tr>
    <td>nats</td><td>21</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.6</td>
  </tr><tr>
    <td>nodejs-offline-buildpack</td><td>1.6.2</td>
  </tr><tr>
    <td>notifications</td><td>36</td>
  </tr><tr>
    <td>notifications-ui</td><td>28</td>
  </tr><tr>
    <td>php-offline-buildpack</td><td>4.3.37</td>
  </tr><tr>
    <td>pivotal-account</td><td>1.6.0</td>
  </tr><tr>
    <td>push-apps-manager-release</td><td>662.0.3</td>
  </tr><tr>
    <td>python-offline-buildpack</td><td>1.5.20</td>
  </tr><tr>
    <td>routing</td><td>0.159.0</td>
  </tr><tr>
    <td>ruby-offline-buildpack</td><td>1.6.43</td>
  </tr><tr>
    <td>scalablesyslog</td><td>8</td>
  </tr><tr>
    <td>service-backup</td><td>18.1.2</td>
  </tr><tr>
    <td>staticfile-offline-buildpack</td><td>1.4.11</td>
  </tr><tr>
    <td>statsd-injector</td><td>1.0.28</td>
  </tr><tr>
    <td>syslog-migration</td><td>6</td>
  </tr><tr>
    <td>uaa</td><td>41</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.0-alpha.1'></a> 1.12.0-alpha.1

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3421.11</td>
  </tr><tr>
    <td>binary-offline-buildpack</td><td>1.0.13</td>
  </tr><tr>
    <td>capi</td><td>1.32.0</td>
  </tr><tr>
    <td>cf</td><td>267</td>
  </tr><tr>
    <td>cf-autoscaling</td><td>94</td>
  </tr><tr>
    <td>cf-backup-and-restore</td><td>0.0.3</td>
  </tr><tr>
    <td>cf-mysql</td><td>35.1.0</td>
  </tr><tr>
    <td>cf-networking</td><td>1.2.0</td>
  </tr><tr>
    <td>cf-smoke-tests</td><td>36</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.137.0</td>
  </tr><tr>
    <td>consul</td><td>171</td>
  </tr><tr>
    <td>diego</td><td>1.21.0</td>
  </tr><tr>
    <td>dotnet-core-offline-buildpack</td><td>1.0.20</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.0</td>
  </tr><tr>
    <td>go-offline-buildpack</td><td>1.8.5</td>
  </tr><tr>
    <td>java-offline-buildpack</td><td>3.18</td>
  </tr><tr>
    <td>loggregator</td><td>90.1</td>
  </tr><tr>
    <td>mysql-backup</td><td>1.35.0</td>
  </tr><tr>
    <td>mysql-monitoring</td><td>8.4.0</td>
  </tr><tr>
    <td>nats</td><td>20</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.6</td>
  </tr><tr>
    <td>nodejs-offline-buildpack</td><td>1.5.36</td>
  </tr><tr>
    <td>notifications</td><td>36</td>
  </tr><tr>
    <td>notifications-ui</td><td>28</td>
  </tr><tr>
    <td>php-offline-buildpack</td><td>4.3.35</td>
  </tr><tr>
    <td>pivotal-account</td><td>1.6.0</td>
  </tr><tr>
    <td>push-apps-manager-release</td><td>662.0.3</td>
  </tr><tr>
    <td>python-offline-buildpack</td><td>1.5.19</td>
  </tr><tr>
    <td>routing</td><td>0.159.0</td>
  </tr><tr>
    <td>ruby-offline-buildpack</td><td>1.6.41</td>
  </tr><tr>
    <td>scalablesyslog</td><td>7</td>
  </tr><tr>
    <td>service-backup</td><td>18.1.2</td>
  </tr><tr>
    <td>staticfile-offline-buildpack</td><td>1.4.9</td>
  </tr><tr>
    <td>statsd-injector</td><td>1.0.28</td>
  </tr><tr>
    <td>syslog-migration</td><td>6</td>
  </tr><tr>
    <td>uaa</td><td>41</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

## <a id='upgrade'></a> How to Upgrade

The procedure for upgrading to Pivotal Cloud Foundry Elastic Runtime v1.12 is
documented in the [Upgrading Pivotal Cloud
Foundry](../customizing/upgrading-pcf.html) topic.

When upgrading to v1.12, be aware of the following upgrade considerations:

* You must upgrade first to a version of Elastic Runtime v1.11.x in order to
  successfully upgrade to v1.12.
* Some partner service tiles may be incompatible with PCF v1.12. Pivotal is
  working with partners to ensure their tiles are being updated to work with the
  latest versions of PCF.<br/><br/> For information about which partner service
  releases are currently compatible with PCF v1.12, review the appropriate
  partners services release documentation at
  [https://docs.pivotal.io](https://docs.pivotal.io), or contact the partner
  organization that produces the tile.

## <a id='adv-features'></a> About Advanced Features

The Advanced Features section of the Elastic Runtime tile includes new
functionality that may have certain constraints.

Although these features are fully supported, Pivotal recommends caution when
using them in production.

## <a id='1.12.0'></a> New Features in Elastic Runtime v1.12.0

This section describes new features of the release.

### Removal of etcd

This release removes the `etcd` server VMs from the PCF deployment.  Operators
should ensure they are deploying service tiles that are known to be compatible
with PCF Elastic Runtime 1.12.

### Removal of Postgres

This release removes the legacy Postgres databases for the Cloud Controller and UAA.  If your deployment was originally installed before PCF 1.6 and still uses Postgres, you must contact your dedicated Support Engineer or Platform Architect for assistance migrating your Cloud Controller and UAA databases to MySQL. They will have access to the PostgreSQL-to-MySQL Migrator tool and instructions on Pivotal Network. 

If you do not migrate to MySQL before upgrading to Elastic Runtime 1.12, the upgrade will fail. 

### Diego Cell Max-in-Flight Default

The max-in-flight percentage for the Diego Cell job in the Elastic Runtime has
been set to 10% since 1.9, but we've seen especially in larger environments
that having the percentage this high can cause some problems:

* Many simultaneous VM creates/deletes and BOSH blob updates can place
significant stress on the underlying infrastructure, especially on vSphere
which has a greater probability of being underprovisioned.
* The cells that are draining are no longer available for allocation, resulting
in a 10% decrease in total memory and disk capacity during the deployment. This
can cause deployments to no longer have sufficient total capacity to run all
the work, or to have insufficient headroom to place larger workloads
successfully.

For these reasons, we have lowered the default max-in-flight percentage on the
Diego Cells to 4%. Operators can still use the Ops Manager API to configure
this setting to fit their needs.

### HAProxy Release

The old HAProxy job, which was the last remaining component from `cf-release`,
has been removed. Replacing it will be the newly incubated
`haproxy-boshrelease`.  The release repository can be found at
[https://github.com/cloudfoundry-incubator/haproxy-boshrelease](https://github.com/cloudfoundry-incubator/haproxy-boshrelease).

### Improved App Health Check Performance

This release changes how Elastic Runtime performs app health checks to improve system performance. This change does not impact the developer workflow for [configuring app healthchecks](../devguide/deploy-apps/healthchecks.html). 

Health checks during app startup previously increased system load because they ran as a Garden process every two seconds. Also, apps that started succesfully could wrongly fail if slow system performance caused the app health check to time out. In some cases, such app failures caused other system components to fail.   

This release resolves these issues by shifting responsibility for running health checks from the Cloud Controller to Diego through new endpoints in the internal Diego API. The Cloud Controller no longer downloads and runs the health check binaries itself. Instead, it calls the Diego API, and Diego uses two LRPs on the app container to run health checks. Developers may see these LRPs if they access an app container through `cf ssh` and list the processes.  


##<a id='knownissues'></a> Known Issues
