---
title: PCF Isolation Segment v1.12 Release Notes
owner: Release Engineering
---

## <a id='releases'></a> Releases

### <a id='1.12.4'></a> 1.12.4

* **[Security Fix]** Bumps cflinuxfs2-release to v1.158.0 to resolve multiple
  security issues. [Release
  Notes](https://github.com/cloudfoundry/cflinuxfs2/releases/tag/1.158.0)

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.11</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.1</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.158.0</td>
  </tr><tr>
    <td>consul</td><td>173</td>
  </tr><tr>
    <td>diego</td><td>1.25.3</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.4</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.1</td>
  </tr><tr>
    <td>loggregator</td><td>96</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.9</td>
  </tr><tr>
    <td>routing</td><td>0.163.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.3'></a> 1.12.3

* **[Security Improvement]** Bumps garden-runc-release to v1.9.4. [Release
  Notes](https://github.com/cloudfoundry/garden-runc-release/releases/tag/v1.9.4).

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.11</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0\*</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.156.0</td>
  </tr><tr>
    <td>consul</td><td>173</td>
  </tr><tr>
    <td>diego</td><td>1.25.3</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.4</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.1</td>
  </tr><tr>
    <td>loggregator</td><td>96</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.9</td>
  </tr><tr>
    <td>routing</td><td>0.163.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.2'></a> 1.12.2

* **[Security Fix]** Bumps cflinuxfs2-release to v1.156.0 to resolve multiple
  security issues. [Release
  Notes](https://github.com/cloudfoundry/cflinuxfs2/releases/tag/1.156.0)
* **[Security Fix]** Resolves an issue with an incorrect `Host` header being
  set on incoming requests through the Router [CVE
  Notice](https://www.cloudfoundry.org/cve-2017-8047/).
* **[Bug Fix]** Bumps haproxy-boshrelease to v8.4.1 to resolve an issue with
  certificate/key concatenation [Release
  Notes](https://github.com/cloudfoundry-incubator/haproxy-boshrelease/releases/tag/v8.4.1).
* **[Feature]** Bumps diego-release to v1.25.3 to include support for Azure
  MySQL [Release
  Notes](https://github.com/cloudfoundry/diego-release/releases/tag/v1.25.3).
* **[Feature]** Patches cf-networking-release to include support for Azure MySQL.
* Changes the default "Router Max Connections Per Backend" from unlimited to 500.
* **[Feature]** Operators can now configure a "Frontend Idle Timeout" for the
  Router and HAProxy. The default timeout is 900 seconds.

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.11</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0\*</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.156.0</td>
  </tr><tr>
    <td>consul</td><td>173</td>
  </tr><tr>
    <td>diego</td><td>1.25.3</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.3</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.1</td>
  </tr><tr>
    <td>loggregator</td><td>96</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.9</td>
  </tr><tr>
    <td>routing</td><td>0.163.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.1'></a> 1.12.1

* **[Security Fix]** Bumps stemcell to v3445.11 to address [USN-3420-2](https://usn.ubuntu.com/usn/usn-3420-2/).
* **[Security Fix]** Bumps cflinuxfs-release to v1.155.0 to address [USN-3415-1](https://usn.ubuntu.com/usn/usn-3415-1/).

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.11</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.155.0</td>
  </tr><tr>
    <td>consul</td><td>173</td>
  </tr><tr>
    <td>diego</td><td>1.25.1</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.3</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.0</td>
  </tr><tr>
    <td>loggregator</td><td>96</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.9</td>
  </tr><tr>
    <td>routing</td><td>0.162.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.0'></a> 1.12.0

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.7</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.146.0</td>
  </tr><tr>
    <td>consul</td><td>173</td>
  </tr><tr>
    <td>diego</td><td>1.25.1</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.3</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.0</td>
  </tr><tr>
    <td>loggregator</td><td>96</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.9</td>
  </tr><tr>
    <td>routing</td><td>0.162.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

## <a id='intro'></a> About PCF Isolation Segment

The PCF Isolation Segment v1.12 tile is available for installation with PCF
v1.12.

[Isolation segments](../concepts/security.html#isolation-segments) provide
dedicated pools of resources where you can deploy apps and  isolate workloads.
Using isolation segments separates app resources as completely as if they were
in different CF deployments but avoids redundant management and network
complexity.

For more information about using isolation segments in your deployment, see the
[Managing Isolation Segments](../adminguide/isolation-segments.html) topic.

## <a id='install'></a> How to Install

The procedure for installing PCF Isolation Segment v1.12 is documented in the
[Installing PCF Isolation Segment](../customizing/installing-pcf-is.html) topic.

To install a PCF Isolation Segment, you must first install PCF v1.12.

## <a id='1.12.0'></a> New Features in PCF Isolation Segment v1.12.0

This section describes new features of the release.

###<a id='haproxy'></a> HAProxy

You can now use an HAProxy for the Isolation Segment tile that is independent from the Elastic Runtime HAProxy. The Isolation Segment tile includes its own HAProxy VM, which uses the 
[haproxy-boshrelease](https://github.com/cloudfoundry-incubator/haproxy-boshrelease). For information on the configuration options for HAProxy, see the [Networking](../customizing/installing-pcf-is.html#networking) section of _Installing PCF Isolation Segment_. 

See the Isolation Segment [installation instructions](../customizing/installing-pcf-is.html#networking) for more information.

###<a id='sharding'></a> Router Sharding Mode

This release includes support for router sharding between the Elastic Runtime and Isolation Segment tiles. In addition to compute isolation, operators can now configure networking isolation for their isolation segments. Alternatively, operators can deploy the Isolation Segment tile for the purpose of using its routers for the Elastic Runtime tile. 

You can configure this feature using the following fields:

* Elastic Runtime tile: **Routers reject requests for Isolation Segments** checkbox
* Isolation Segment tile: **Router Sharding Mode** selector

See the Isolation Segment [installation instructions](../customizing/installing-pcf-is.html#networking) for more information.

###<a id='router-config'></a> Router Configuration Options

The **Networking** pane of the Isolation Segment tile now includes the following fields for the router.  Additionally, the default instance count for the **Router** VM is now set to `3` in the **Resource Config** pane. 

* **Router Max Idle Keepalive Connections** 
* **Disable SSL certificate verification for this environment**
* **HTTP Headers to Log**
* **Disable insecure cookies on the Router**
* **Enable Zipkin tracking headers on the router**
* **Router Timeout to Backends**
* **Load Balancer Unhealthy Threshold**
* **Load Balancer Healthy Threshold**
* **Max Connections Per Backend**

See the Isolation Segment [installation instructions](../customizing/installing-pcf-is.html#networking) for more information about each field.


###<a id='networking-poe'></a> Simplified TLS Configuration

The point of entry options on the Isolation Segment tile **Networking** pane have been restructured to be
more understandable and flexible.  Operators no longer need to configure
the Router or HAProxy separately as both components are configured using
the same options. This includes the following changes:

* Gorouter and HAProxy always listen for TLS requests. You provide an SSL certificate for both Gorouter and HAProxy using a single field. 
* HAProxy forwards all requests to Gorouter over TLS by default. You can optionally disable this feature. 
* You can configure the minimum version of TLS for Gorouter and HAProxy with a single field. 
* You can provide a list of CAs to HAProxy for it to validate the Gorouter certificate. 
* You can optionally disable the HTTP listener for both Gorouter and HAProxy with a single checkbox. 
* You can specify TLS cipher suites for HAProxy and Gorouter independently.

###<a id='app-header'></a> Mutual TLS Headers on Inbound Application Traffic

Gorouter can now forward the `X-Forwarded-Client-Cert` header to app
instances when provided. Alternatively, operators can configure Gorouter to
forward the header only when the mutual TLS connection from the client can be
validated. Additionally, operators may now configure Gorouter to overwrite the
XFCC header with the client certificate received in mTLS handshakes.

This configuration is available in the **Networking** pane under **Configure the CF Router support for the X-Forwarded-Client-Cert header**. See the Isolation Segment [installation instructions](../customizing/installing-pcf-is.html#networking) for more information.

###<a id='app-traffic'></a> Support for Logging All App Traffic

Operators can enable logging of all accepted and denied packets due to ASGs or container-to-container networking policies. This provides more visibility into app traffic, including denied traffic.

Operators configure this global logging in the **Networking** pane of the Isolation Segment tile under the **Log traffic for all accepted/denied application packets** field. See the [App Traffic Logging](../opsguide/logging-config-opsman.html#app-traffic-log) section for more information.

###<a id='groot'></a> Introducing GrootFS

GrootFS is the new container image management plugin for Garden-runC.
It helps with the filesystem isolation of Garden-runC containers,
image caching,
and disk quota enforcement.
GrootFS replaces the previous built-in functionality,
which used an obsolete layer filesystem (AUFS)
that lacks support from the Linux Kernel community.
Additionally, GrootFS uses [OCI](https://www.opencontainers.org/) standards
for [container images](http://github.com/opencontainers/image-spec).

For more information about GrootFS in PCF, see the following topics:

* [Understanding Container Security](../concepts/container-security.html#mechanics)
* [Component: Garden](../concepts/architecture/garden.html#garden-rootfs)

###<a id='garden-cleanup'></a> Garden Disk-Cleanup 

Operators using PCF Isolation Segment can now configure the Garden and GrootFS cleanup thresholds independently of the Elastic Runtime tile. The **Application Containers** pane of the Isolation Segment tile now includes the following selector: **Docker Images Disk-Cleanup Scheduling on Cell VMs**. 

###<a id='max-in-flight'></a> Diego Cell Max-in-Flight Default

This release lowers the default max-in-flight percentage on 
Diego Cells to 4%. Previously, this value was set to 10%, which can cause the following issues in larger environments:

* Many simultaneous VM creates/deletes and BOSH blob updates placing
significant stress on the underlying infrastructure, especially on vSphere
which has a greater probability of being under-provisioned.
* Cells that are draining are no longer available for allocation, resulting
in a 10% decrease in total memory and disk capacity during deployment. This
can cause deployments to no longer have sufficient total capacity to run all work, or to have insufficient headroom to place larger workloads
successfully.

Operators can still use the Ops Manager API to configure this setting to fit their needs. For more information about this property, see [Managing Diego Cell Limits During Upgrade](../adminguide/diego-cell-upgrade.html).

###<a id='diego-metron'></a> Secure Communication Between Diego and Loggregator

Diego Cells now use the Metron API v2. This gRPC-based API supports mutual TLS authentication and secures the communication path between the Diego `rep` and Loggregator.

###<a id='ldap-volume'></a> NFSV3 Volume Services with LDAP

Operators can now configure LDAP for NFSv3 volume services. Using LDAP secures the NFSV3 volume service by preventing a developer from binding to an NFS share using an
arbitrary UID and potentially gaining access to sensitive data stored by another user or app. If you enable LDAP support, 
 developers must provide credentials for any user they wish
to bind as. See [Enabling NFS Volume Services](../opsguide/enable-vol-services.html).  

###<a id='app-id-creds'></a> Application Instance Identity Credentials

The instance identity system in Diego provides each app container with a PEM-encoded [X.509](https://www.ietf.org/rfc/rfc5280.txt) certificate and [PKCS #1 RSA](https://tools.ietf.org/html/rfc3447) private key. The values of the environment variables `CF_INSTANCE_CERT` and `CF_INSTANCE_KEY` contain the absolute paths to the certificate and private key files. The validity period is 3 years for the Instance Identity root and 2 years for the intermediate CA certificates.

See the [App Instance Container Identity Credentials](../security/networking/tls-info.html#container-creds) section for more information.

###<a id='c2c'></a> Container-to-Container Networking Updates

Container-to-container networking is now always enabled. The commands are integrated with the cf CLI and now include the option to specify a port range when adding and removing policies. See [Create Policies for Container-to-Container Networking](../devguide/deploy-apps/cf-networking.html#create-policies). 

## <a id='adv-features'></a> About Advanced Features

The Advanced Features section of the PCF Isolation Segment tile includes new
functionality that may have certain constraints.  Although these features are
fully supported, Pivotal recommends caution when using them in production.
