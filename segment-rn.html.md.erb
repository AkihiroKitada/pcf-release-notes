---
title: PCF Isolation Segment v1.12 Release Notes
owner: Release Engineering
---

## <a id='releases'></a> Releases

### <a id='1.12.0-beta.2'></a> 1.12.0-beta.2

* Bumps stemcell to v3445.2
* Bumps diego-release to v1.25.1 [Release Notes](https://github.com/cloudfoundry/diego-release/releases/tag/v1.25.1)
* Bumps grootfs-release to v0.25.0 [Release Notes](https://github.com/cloudfoundry/grootfs-release/releases/tag/v0.25.0)
* Bumps routing-release to v0.162.0 [Release Notes](https://github.com/cloudfoundry-incubator/routing-release/releases/tag/0.162.0)
* Bumps haproxy-release to v8.4.0 [Release Notes](https://github.com/cloudfoundry-incubator/haproxy-boshrelease/releases/tag/v8.4.0)
* Bumps nfs-volume-release to v1.0.8 [Release Notes](https://github.com/cloudfoundry/nfs-volume-release/releases/tag/v1.0.8)
* Instance groups were reordered to deploy HAProxy before everything.
* The Networking tab now comes before the Application Container tab, like we see in Elastic Runtime.
* Allows operators to disable HTTP on the Router.
* The Router can now configure a number of max idle connections.
* The Router can log extra headers.
* The Router can disable insecure cookies.
* The Router supports Zipkin tracing.
* The Router timeout to backends can be configured.
* Operators can specify a healthy and unhealthy threshold for load balancer healthiness monitoring of the Router.
* The HAProxy can have statically assigned IPs.
* The HAProxy request max buffer size can be configured.
* SSL verification can be disabled.
* Operators can specify multiple certificates for HAProxy and Router.
* The Garden disk cleanup method can be configured independently of the Elastic Runtime setting.

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445.2</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.146.0</td>
  </tr><tr>
    <td>consul</td><td>171</td>
  </tr><tr>
    <td>diego</td><td>1.25.1</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.0</td>
  </tr><tr>
    <td>grootfs</td><td>0.25.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.4.0</td>
  </tr><tr>
    <td>loggregator</td><td>92</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.8</td>
  </tr><tr>
    <td>routing</td><td>0.162.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

### <a id='1.12.0-beta.1'></a> 1.12.0-beta.1

* HAProxy can now be deployed in front of the Router VMs.
* The default instance count for the Router has been bumped to 3.
* A minimum TLS version can be set for the Router and HAProxy.
* Operators can disable HTTP on the HAProxy VM.
* Operators can specify cipher suites for the HAProxy VM.
* HAProxy can be configured to reject inbound requests to a domain that do not originate from a known CIDR.
* HAProxy can forward requests over TLS to the Router.

  <table border="1" class="nice">
  <thead>
  <tr>
    <th>Component</th>
    <th>Version</th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>Stemcell</td><td>3445</td>
  </tr><tr>
    <td>cf-networking</td><td>1.4.0</td>
  </tr><tr>
    <td>cflinuxfs2</td><td>1.146.0</td>
  </tr><tr>
    <td>consul</td><td>171</td>
  </tr><tr>
    <td>diego</td><td>1.24.0</td>
  </tr><tr>
    <td>garden-runc</td><td>1.9.0</td>
  </tr><tr>
    <td>grootfs</td><td>0.24.0</td>
  </tr><tr>
    <td>haproxy</td><td>8.3.0</td>
  </tr><tr>
    <td>loggregator</td><td>92</td>
  </tr><tr>
    <td>nfs-volume</td><td>1.0.6</td>
  </tr><tr>
    <td>routing</td><td>0.160.0</td>
  </tr><tr>
    <td>syslog-migration</td><td>8</td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="2"><em>\* Components marked with an asterisk have been patched to resolve security vulnerabilities or fix component behavior.</em></td>
  </tr>
  </tfoot>
  </table>

## <a id='intro'></a> About PCF Isolation Segment

The PCF Isolation Segment v1.12 tile is available for installation with PCF
v1.12.

[Isolation segments](../concepts/security.html#isolation-segments) provide
dedicated pools of resources where you can deploy apps and  isolate workloads.
Using isolation segments separates app resources as completely as if they were
in different CF deployments but avoids redundant management and network
complexity.

For more information about using isolation segments in your deployment, see the
[Managing Isolation Segments](../adminguide/isolation-segments.html) topic.

## <a id='install'></a> How to Install

The procedure for installing PCF Isolation Segment v1.12 is documented in the
[Installing PCF Isolation Segment](../customizing/installing-pcf-is.html) topic.

To install a PCF Isolation Segment, you must first install PCF v1.12.

## <a id='adv-features'></a> About Advanced Features

The Advanced Features section of the PCF Isolation Segment tile includes new
functionality that may have certain constraints.  Although these features are
fully supported, Pivotal recommends caution when using them in production.

## <a id='1.12.0'></a> New Features in PCF Isolation Segment v1.12.0

This section describes new features of the release.

### Diego Cell Max-in-Flight Default

The max-in-flight percentage for the Diego Cell job in the Isolation Segment
has been set to 10% since 1.10, but we've seen especially in larger
environments that having the percentage this high can cause some problems:

* Many simultaneous VM creates/deletes and BOSH blob updates can place
significant stress on the underlying infrastructure, especially on vSphere
which has a greater probability of being under-provisioned.
* The cells that are draining are no longer available for allocation, resulting
in a 10% decrease in total memory and disk capacity during the deployment. This
can cause deployments to no longer have sufficient total capacity to run all
the work, or to have insufficient headroom to place larger workloads
successfully.

For these reasons, we have lowered the default max-in-flight percentage on the
Diego Cells to 4%. Operators can still use the Ops Manager API to configure
this setting to fit their needs.

### Router Sharding Mode

The Isolation Segment tile supports router sharding. Operators can choose to have the routers for the tile only acknowledge requests from apps deployed within its cells, or reject requests for any isolation segment. See **Router Sharding Mode** in the **Networking** section.

### Introducing GrootFS

GrootFS is the new container image management plugin for Garden-runC.
It helps with the filesystem isolation of Garden-runC containers,
image caching,
and disk quota enforcement.
GrootFS replaces the previous built-in functionality,
which used an obsolete layer filesystem (AUFS)
that lacks support from the Linux Kernel community.
Additionally, GrootFS uses [OCI](https://www.opencontainers.org/) standards
for [container images](http://github.com/opencontainers/image-spec).

For more information about GrootFS in PCF, see the following topics:

* [Understanding Container Security](../concepts/container-security.html#mechanics)
* [Component: Garden](../concepts/architecture/garden.html#garden-rootfs)

### HAProxy

You can now use an HAProxy for the Isolation Segment tile that is independent from the Elastic Runtime HAProxy. The Isolation Segment tile includes its own HAProxy VM, which uses the 
[haproxy-boshrelease](https://github.com/cloudfoundry-incubator/haproxy-boshrelease). For information on the configuration options for HAProxy, see the [Networking](../customizing/installing-pcf-is.html#networking) section of _Installing PCF Isolation Segment_. 
